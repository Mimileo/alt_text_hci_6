
<%= form_with(model: alt) do |form| %>
  <% if alt.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(alt.errors.count, "error") %> prohibited this alt from being saved:</h2>

      <ul>
        <% alt.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-3">
    <label for="formFile" class="form-label">Image for Seven Army</label>
      <div id="preview" class="container-fluid" style="width:100px;height:100px;">
    </div>
    <%= form.hidden_field :image, value: form.object.cached_image_data %>
    <%= form.file_field :image, class: "btn btn-primary", class: "form-control", type: "file", id: "formFile" %>
  </div>

  <div class="form-floating mb-3">
    <%= form.text_field :title, id: "title", class: "form-control", placeholder: "Title", required: true %>
     <label for="title">Title<span style="color:red"> *</span></label>
  </div>
  <div class="form-floating mb-3">
    <%= form.text_field :tag_list, value: @alt.tag_list.to_s.split(" "), id: "tags", class: "form-control d-block", placeholder: "Tags", required: true %>
     <label for="tags">Tags<span style="color:red"> *</span></label>
  </div>
  <div class="form-floating mb-3">
    <%= form.text_field :original_url, id: "original_url", class: "form-control d-block", placeholder: "original_url" %>
     <label for="original_url">Original URL</label>
  </div>
  <div class="form-floating mb-3">
    <%= form.text_field :original_source, id: "original_source", class: "form-control d-block", placeholder: "original_source"%>
     <label for="original_source">Original Source (e.g. name of person)</label>
  </div>

  <div class="form-field mb-3">
    <%= form.label "Image Alt Text", class: "d-block" %>
    <%= form.text_area :body, class: "form-control", rows: 10 %>
  </div>
  <div class="mb-3 bg-light border rounded border-1 p-3">
    <% if super_admin || referee %>
      <div class="d-block">
        <%= form.label "Verify the ALT TEXT of this image.", style: "display: block" %>
        <%= form.check_box :verified %>
      </div>
    <% end %>
    <% if user_signed_in? %>
       <div class="d-block">
          <%= form.label "Flag the ALT TEXT of this image.", style: "display: block" %>
          <%= form.check_box :flag %>
      </div>
      <%= form.hidden_field :user_id, value: current_user.id %>
    <% end %>
  </div>
  <div>
  <!-- Todo: add Spinner -->
   <%= form.submit "Save", class: "btn btn-primary btn-lg btn-block", id: "submit-btn" %>
   <%= content_tag :div, class: 'alts', data: {alts: Alt.all.map { |u| u.image.data_uri 
}} do %>
   <%end%>

  </div>

  <script>
  


    var f;
    var image2 = [];
    var r = new FileReader();
   
    var alts = $('.alts').data('alts')
    //console.log($('.alts').data('alts')[0]);
    var mime_type = "image/jpeg"
 
   
var r2;


  /*let curr = new Promise(resolve => {
    let r2 = new FileReader();
    r2.readAsDataURL(alt);
    r2.onload = () => (r2.result);
  });
  image2.push(curr)*/
//}

/*Promise.all(image2).then(imgContents) => {
  console.log(imgContents)

});*/
   
/*Promise.all(alts.map(alt =>

   fetch(alt,{
     method: 'GET', 
     mode: 'no-cors'
     }).then(res => res.blob())
)).then(blob => {
  
  var temp=""
  var r2;
  for (let i = 0; i < blob.length; i++) {
    r2 = new FileReader()
    reader.readAsDataURL(blob[i]);
   // console.log(blob[i])
    r2.onload = () => {
      temp = r2.result
      console.log(temp)
      
      //console.log("base64 size: ", image2.length)
      
    }
    
  }
 
   
   
  
   
   
})*/
 //$(".alert").alert('close')     
var img1 = "";
var base64String = "";
$(window).on("load", function() {
  $('#formFile').on('change', function(event) {
    var files = event.target.files;
    var image = files[0]
    var formData = new FormData()
    console.log(image.size);
    var reader = new FileReader();
    reader.onload = function(file) {
      var img = new Image();
      console.log(file);
    
      
      
     
      img.src = file.target.result;
      $('#preview').html(img);
      formData.append('image', image)
      console.log(img.width);

      base64String = reader.result
      console.log("Result: ")
      console.log(base64String)
      img1 =base64String;
    
    for (const i of alts) {
       if (img1.trim() === i.trim()) {
        
        alert("This image has already exists! Please select another image.")
        $('#formFile').val("");
        $('#submit-btn').prop('disabled', true);
        break;
        
      } else{
         console.log("Not a duplicate")
          $('#submit-btn').prop('disabled', false);
      }


    }
   
      //new Int8Array(reader.readAsArrayBuffer(image))
                //.replace('data:', '')
               // .replace(/^.+,/, '');

      //console.log(base64String);

      fetch('https://alt-text-hci-6.herokuapp.com/alts/', {
            method: 'POST',

            body: formData
        })
        .then(resp => resp.arrayBuffer())
        .then(data => {
            if (data.errors) {
              alert(data.errors)
              console.log(data)
            }
            else {
              console.log(data)
              //console.log(new Uint8Array(JSON.parse(data)))
              //ase64String = new Uint8Array(JSON.parse(data))
            }
        });
    }

    
    reader.readAsDataURL(image);
    

    
    
  });
});

</script>
<% end %>